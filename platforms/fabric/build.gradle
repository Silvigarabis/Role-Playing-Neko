plugins {
    id 'fabric-loom' version '1.6.12'
}

version = version + properties["minecraft_version"]

repositories {
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    //modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
}

processResources {
    // :runServer :runClient 时需要提前复制资源 
    mustRunAfter project(":core").tasks.getByName("processResources")
    from(project(":core").tasks.getByName("processResources").outputs.files.singleFile)

    filesMatching("fabric.mod.json") {
        expand([
            "version": project.version,
            "project_id": project.project_id,
            "project_name": project.project_short_name,

            "description": rootProject.ext.description,
            "author": rootProject.ext.author,
            "authors": rootProject.ext.authors,
            "contributors": rootProject.ext.contributors,
            "website": rootProject.ext.website,
            "issues": rootProject.ext.issues,
            "license": rootProject.ext.license,

            "loader_version": project.loader_version,
            "minecraft_version": project.minecraft_version
        ])
    }
}

def encodeToUnicode(String str) {
    return str.collect { it -> it > 255 ? "\\u${String.format('%04x', (int)it)}" : it }.join()
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "LICENSE_${rootProject.project_name}"}
    }
}
